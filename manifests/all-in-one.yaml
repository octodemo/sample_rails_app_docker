---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-rails-back
  labels:
    app: azure-rails-back
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-rails-back
  template:
    metadata:
      labels:
        app: azure-rails-back
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
        - name: azure-rails-back
          image: postgres
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_PASSWORD
              value: "password"
---
apiVersion: v1
kind: Service
metadata:
  name: "azure-rails-back"
spec:
  ports:
    - port: 5432
  selector:
    app: "azure-rails-back"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-rails-front
  labels:
    app: azure-rails-front
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-rails-front
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: azure-rails-front
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name: azure-rails-front
          image: acr4ravigadhia.azurecr.io/sample_rails_app_docker:91cf9c513bc9c710ff590b130191a5dc2c0111da
          ports:
            - containerPort: 3000
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
          env:
            - name: POSTGRES
              value: "azure-rails-back"
          args:
            - bash
            - -c
            - rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'
---
apiVersion: v1
kind: Service
metadata:
  name: azure-rails-front
spec:
  type: LoadBalancer
  ports:
    - port: 3000
  selector:
    app: azure-rails-front
